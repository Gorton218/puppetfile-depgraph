name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests
        run: npm test
        
      - name: Install VSCE
        run: npm install -g @vscode/vsce
        
      - name: Package extension
        run: vsce package
        
      - name: Get package info
        id: package
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          echo "version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
          echo "name=$PACKAGE_NAME" >> $GITHUB_OUTPUT
          echo "filename=$PACKAGE_NAME-$PACKAGE_VERSION.vsix" >> $GITHUB_OUTPUT
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name || inputs.version }}
          release_name: Release ${{ github.ref_name || inputs.version }}
          body: |
            ## Changes
            
            See [CHANGELOG.md](CHANGELOG.md) for detailed changes.
            
            ## Installation
            
            Download the `.vsix` file and install it in VS Code:
            1. Open VS Code
            2. Press `Ctrl+Shift+P` (or `Cmd+Shift+P` on Mac)
            3. Type "Extensions: Install from VSIX"
            4. Select the downloaded `.vsix` file
            
            ## Package Info
            - **Version**: ${{ steps.package.outputs.version }}
            - **Package**: ${{ steps.package.outputs.filename }}
          draft: false
          prerelease: false
          
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ steps.package.outputs.filename }}
          asset_name: ${{ steps.package.outputs.filename }}
          asset_content_type: application/zip
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: vsix-package
          path: ./*.vsix
          retention-days: 30